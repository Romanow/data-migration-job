plugins {
    id "idea"
    id "org.jetbrains.kotlin.jvm" version "1.9.22"
    id "org.jetbrains.kotlin.plugin.spring" version "1.9.22"
    id "org.jetbrains.kotlin.kapt" version "1.9.22"
    id "org.springframework.boot" version "3.2.6"
    id "io.spring.dependency-management" version "1.1.3"
    id "org.jlleitschuh.gradle.ktlint" version "12.1.0"
    id "com.gorylenko.gradle-git-properties" version "2.4.2"
}

ext {
    postgresContainerVersion = "1.19.8"
}

ktlint {
    version.set("1.1.1")
}

repositories {
    mavenCentral()
}

[compileKotlin, compileTestKotlin]*.kotlinOptions*.jvmTarget = "17"

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-batch"
    implementation "org.springframework.boot:spring-boot-starter-data-jdbc"
    implementation "org.springframework.boot:spring-boot-starter-logging"

    implementation "com.h2database:h2"
    implementation "org.postgresql:postgresql"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin"

    kapt "org.springframework.boot:spring-boot-configuration-processor"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.testcontainers:postgresql:$postgresContainerVersion"
}

test {
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
    }
}

processResources {
    filesMatching(["**/properties-from-gradle.properties"]) {
        expand(project.properties)
    }
}

gitProperties {
    dateFormat = "dd.MM.yyyy HH:mm:ss (Z)"
    dateFormatTimeZone = "Europe/Moscow"
    extProperty = "gitProps"
}

generateGitProperties.outputs.upToDateWhen { false }

bootJar {
    archiveFileName = "${project.name}.jar"
    manifest {
        attributes(
            "Application-Name": "${project.name}",
            "Application-Version": "${project.version}",
            "Git-Branch": "${-> project.ext.gitProps['git.branch']}",
            "Build-Revision": "${-> project.ext.gitProps['git.commit.id.abbrev']}",
            "Commit-Time": "${-> project.ext.gitProps['git.commit.time']}"
        )
    }
}
